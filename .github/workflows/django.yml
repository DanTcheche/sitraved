name: Django CI

env:
  # Django variables
  DJANGO_SETTINGS_MODULE: conf.settings.testing
  DATABASE_TEST_URL: postgres://development:development@localhost/test_db
  # Build variables
  PIP_CACHE_DIR: /prebuild/pip-cache
  PYTHON_VENV_DIR: /prebuild/venv

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
        
    services:
      image: postgres
      env:
        POSTGRES_PASSWORD: development
        POSTGRES_USER: development
        POSTGRES_DB: development
      ports:
        - 5432:5432
      options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run Tests
      run: poetry run pytest
