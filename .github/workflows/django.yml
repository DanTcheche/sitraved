name: Django CI

variables:
  # postgres service variables
  POSTGRES_DB: development
  POSTGRES_USER: development
  POSTGRES_PASSWORD: development
  # Django variables
  DJANGO_SETTINGS_MODULE: conf.settings.testing
  DATABASE_TEST_URL: postgres://development:development@localhost/test_db
  # Build variables
  PIP_CACHE_DIR: /prebuild/pip-cache
  PYTHON_VENV_DIR: /prebuild/venv

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

    - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config settings.virtualenvs.in-project false
        poetry config settings.virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run Tests
      run: poetry run pytest --cov . -n 2
